source("https://bioconductor.org/biocLite.R")
biocLite("limma")
library(limma)
exit
q()
a <- rep( NA, 1e9)
a <- rep( NA, 1e12)
a <- rep( NA, 1e10)
a <- rep( NA, 3e9)
q()
for(i in 1:1e9){
a[i] <- (i+1)*i
}
a <- NULL
for(i in 1:1e9){
a[i] <- (i+1)*i
}
a
library(BSgenome)
source("https://bioconductor.org/biocLite.R")
biocLite("BSgenome")
library(BSgenome)
head(available.genomes())
a <- available.genomes()
a
source("https://bioconductor.org/biocLite.R")
biocLite("AnnotationHub")
library(AnnotationHub)
hub <- AnnotationHub()
names(mcols(hub))
unique(hub$species)
names(mcols(hub))
hub
qry <- query(hub, c("granges","homo sapiens","ensembl"))
qry
length(unique(hub$species))
qry <- query(hub, c("granges","salmo salar","ensembl"))
qry
names(mcols(hub))
qry <- query(hub, c("granges","salmo salar","NCBI"))
qry
qry <- query(hub, "salmo salar")
qry
qry$sourceurl
whatIwant <- qry[["AH56329"]]
whatIwant
GRCh38TxDb <- makeTxDbFromGRanges(whatIwant)
whatIwant$conn
whatIwant$field
keys(whatIwant)
library(annotate)
library(AnnotationHub)
library(AnnotationDbi)
hub <- AnnotationHub()
qry <- query(hub, c("salmo salar"))
qry
salmo_salar <- qry[['AH56329']]
AC <- row.names(Ac_Cntrl)
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[1] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[2] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[3] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[4] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[5] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[6] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[7] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[8] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[9] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[10] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[11] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[12] )
columns(salmo_salar)
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[14] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[15] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[16] )
select(salmo_salar, keys(salmo_salar),columns(salmo_salar)[17] )
columns(salmo_salar)
knitr::opts_chunk$set(echo = TRUE)
rnorm(10)
rnorm(10)
library(limma)
library(limma)
library(scatterplot3d)
library(Vennerable)
library(xlsx)
library(gplots)
setwd(path)
path <- "Salmon_raw_data/Liver/"
source <- 'bluefuse'
targets <- "Salmon_raw_data/Liver/Targets.txt"
targets <- readTargets(targets)
shiny::runApp('Shiny train/App-1')
library(shiny)
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
shiny::runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/App-1')
runApp('Shiny train/census-app')
shiny::runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
boxplot(rnorm(10))
boxplot(rnorm(10, sd = 10))
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
c(rep('green', 20), rep('red', 20))
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
type(NULL)
class(NULL)
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
p <- C:\Users\Usuario\AppData\Local\Temp\RtmpKkFqfk/e7af1fe651d4f1f88d301cfe/0.xls
p <- 'C:\Users\Usuario\AppData\Local\Temp\RtmpKkFqfk/e7af1fe651d4f1f88d301cfe/0.xls'
p <- as.character('C:\Users\Usuario\AppData\Local\Temp\RtmpKkFqfk/e7af1fe651d4f1f88d301cfe/0.xls')
p <- as.character('C: \Users\Usuario\AppData\Local\Temp\RtmpKkFqfk/e7af1fe651d4f1f88d301cfe/0.xls')
p <- as.character('C:/Users\Usuario\AppData\Local\Temp\RtmpKkFqfk/e7af1fe651d4f1f88d301cfe/0.xls')
p <- as.character('C:/Users/Usuario\AppData\Local\Temp\RtmpKkFqfk/e7af1fe651d4f1f88d301cfe/0.xls')
runApp('GitHub/Shiny_projects/microarray')
p <- 'C:\\Users\\Usuario\\AppData\\Local\\Temp\\RtmpKkFqfk/e7af1fe651d4f1f88d301cfe/0.xls'
gsub('*.xls', '', p)
gsub('*.xls', '', p, perl = T)
gsub('[0123456789].xls', '', p, perl = T)
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
runApp('GitHub/Shiny_projects/microarray')
path <- "Salmon_raw_data/Liver/"
source <- 'bluefuse'
targets <- "Targets.txt"
library(limma)
targets <- readTargets(targets, path = path)
class(targets)
runApp('GitHub/Shiny_projects/microarray')
